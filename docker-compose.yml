services:
    go-push-server:
      build:
        dockerfile: ./Dockerfile
      restart: always
      environment:
        - PORT=${WEB_PORT}
      ports:
        - ${WEB_PORT}:${WEB_PORT}
      networks:
        - app-network
      depends_on:
        - mysql
        - redis
        - ws
      volumes:
        - data-volume
      extra_hosts:
        - "host.docker.internal:host-gateway"
      
    mysql:
      image: mysql:8.0.30
      container_name: mysql-8.0.30
      command:
        - --default-authentication-plugin=mysql_native_password
      restart: always
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # MySQL root 비밀번호
        - TZ=Asia/Seoul
      ports:
        - ${MYSQL_PORT}:${MYSQL_PORT}
      networks:
        - app-network
      volumes:
        - data-volume:/var/lib/mysql # 호스트:컨테이너
      extra_hosts:
        - "host.docker.internal:host-gateway"

    redis:
      image: redis:6.2.7
      container_name: redis-6.2.7
      command:
        - --requirepass ${REDIS_PASSWORD}
        - /usr/local/etc/redis/redis.conf
      restart: always
      environment:
        - TZ=Asia/Seoul
      ports:
        - ${REDIS_PORT}:${REDIS_PORT}
      networks:
        - app-network
      volumes:
        - /usr/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf # 호스트:컨테이너
      extra_hosts:
        - "host.docker.internal:host-gateway"

    ws:
      image: haproxy:2.6.2
      container_name: haproxy-2.6.2
      restart: always
      environment:
        - TZ=Asia/Seoul
      ports:
        - 80:80
        - 443:443
      networks:
        - app-network
      volumes:
        - /usr/docker/haproxy/haproxy.cfg:/etc/haproxy/haproxy.cfg # 호스트:컨테이너
      extra_hosts:
        - "host.docker.internal:host-gateway"

volumes:
    data-volume:

networks:
  app-network:
    driver: bridge